import { Injectable } from "@angular/core"

@Injectable({
  providedIn: "root",
})
export class FigletService {
  constructor() {}

  async generateText(text: string, font = "standard"): Promise<string> {
    try {
      return this.createAsciiArt(text, font)
    } catch (error) {
      console.error("Error generating figlet text:", error)
      return text // Fallback to plain text
    }
  }

  private createAsciiArt(text: string, font: string): string {
    const patterns = this.getFontPattern(font)

    if (text.length > 15) {
      text = text.substring(0, 15) // Limit length for better display
    }

    let result = ""
    const lines = patterns.height

    for (let line = 0; line < lines; line++) {
      let currentLine = ""
      for (const char of text.toUpperCase()) {
        const charPattern = patterns.chars[char] || patterns.chars[" "]
        if (charPattern && charPattern[line]) {
          currentLine += charPattern[line]
        } else {
          currentLine += " ".repeat(patterns.width)
        }
      }
      result += currentLine.trimEnd() + "\n"
    }

    return result.trimEnd()
  }

  private getFontPattern(font: string): any {
    const patterns: { [key: string]: any } = {
      standard: {
        height: 6,
        width: 8,
        chars: {
          A: ["  ___  ", " / _ \\ ", "| |_| |", "|  _  |", "| | | |", "|_| |_|"],
          B: [" _____ ", "|  _  |", "| |_| |", "|  _  |", "| |_| |", "|_____|"],
          C: [" _____ ", "/  __ \\", "| /  \\/", "| |    ", "| \\__/\\", " \\____/"],
          D: [" _____ ", "|  _  |", "| | | |", "| | | |", "| |_| |", "|_____|"],
          E: [" _____ ", "|  ___|", "| |___ ", "|  ___|", "| |___ ", "|_____|"],
          F: [" _____ ", "|  ___|", "| |___ ", "|  ___|", "| |    ", "|_|    "],
          G: [" _____ ", "/  __ \\", "| /  \\/", "| | __ ", "| \\__/|", " \\____/"],
          H: [" _   _ ", "| | | |", "| |_| |", "|  _  |", "| | | |", "|_| |_|"],
          I: [" _____ ", "|_   _|", "  | |  ", "  | |  ", " _| |_ ", "|_____|"],
          J: ["     _ ", "    | |", "    | |", " _  | |", "| |_| |", " \\___/"],
          K: [" _   _ ", "| | / /", "| |/ / ", "|    \\ ", "| |\\  \\", "|_| \\_/"],
          L: [" _     ", "| |    ", "| |    ", "| |    ", "| |___ ", "|_____|"],
          M: [" _____ ", "|     |", "| |_| |", "|     |", "| | | |", "|_| |_|"],
          N: [" _   _ ", "| \\ | |", "|  \\| |", "| . ` |", "| |\\  |", "|_| \\_|"],
          O: [" _____ ", "/  _  \\", "| | | |", "| | | |", "| |_| |", "\\_____|"],
          P: [" _____ ", "|  _  |", "| |_| |", "|  ___|", "| |    ", "|_|    "],
          Q: [" _____ ", "/  _  \\", "| | | |", "| | | |", "| |_| |", "\\____ |"],
          R: [" _____ ", "|  _  |", "| |_| |", "|  _  |", "| | | |", "|_| |_|"],
          S: [" _____ ", "/  ___|", "\\ `--. ", " `--. \\", "/\\__/ /", "\\____/ "],
          T: [" _____ ", "|_   _|", "  | |  ", "  | |  ", "  | |  ", "  |_|  "],
          U: [" _   _ ", "| | | |", "| | | |", "| | | |", "| |_| |", " \\___/"],
          V: [" _   _ ", "| | | |", "| | | |", "| | | |", " \\ V / ", "  \\_/  "],
          W: [" _    _ ", "| |  | |", "| |  | |", "| |/\\| |", "\\  /\\  /", " \\/  \\/ "],
          X: [" _   _ ", "\\ \\ / /", " \\ V / ", " /   \\ ", "/ /^\\ \\", "\\/   \\/"],
          Y: [" _   _ ", "\\ \\ / /", " \\ V / ", "  | |  ", "  | |  ", "  |_|  "],
          Z: [" _____ ", "|___  |", "   / / ", "  / /  ", "./ /___", "\\_____/"],
          " ": ["   ", "   ", "   ", "   ", "   ", "   "],
        },
      },
      big: {
        height: 8,
        width: 10,
        chars: {
          A: [
            "          ",
            "    /\\    ",
            "   /  \\   ",
            "  / /\\ \\  ",
            " / ____ \\ ",
            "/_/    \\_\\",
            "          ",
            "          ",
          ],
          B: [" ______ ", "|  __  |", "| |__| |", "|  __  |", "| |__| |", "|______|", "        ", "        "],
          C: ["  _____ ", " /  __ \\", "| /  \\/", "| |     ", "| \\__/\\ ", " \\____/ ", "        ", "        "],
          " ": ["     ", "     ", "     ", "     ", "     ", "     ", "     ", "     "],
        },
      },
      small: {
        height: 4,
        width: 4,
        chars: {
          A: [" /\\ ", "/  \\", "\\  /", " \\/ "],
          B: ["|¯| ", "|¯| ", "|_| ", "    "],
          C: [" ¯¯ ", "|   ", "|__ ", "    "],
          " ": ["  ", "  ", "  ", "  "],
        },
      },
      slant: {
        height: 6,
        width: 8,
        chars: {
          A: ["    ____ ", "   /   |", "  / /| |", " / ___ |", "/_/  |_|", "        "],
          B: [" ____   ", "|  _ \\  ", "| |_) | ", "|  _ <  ", "| |_) | ", "|____/  "],
          " ": ["   ", "   ", "   ", "   ", "   ", "   "],
        },
      },
      block: {
        height: 6,
        width: 6,
        chars: {
          A: ["█████ ", "██ ██ ", "█████ ", "██ ██ ", "██ ██ ", "      "],
          B: ["████  ", "██ ██ ", "████  ", "██ ██ ", "████  ", "      "],
          " ": ["    ", "    ", "    ", "    ", "    ", "    "],
        },
      },
      "3x5": {
        height: 5,
        width: 3,
        chars: {
          A: [" █ ", "█ █", "███", "█ █", "   "],
          B: ["██ ", "██ ", "██ ", "██ ", "   "],
          " ": ["  ", "  ", "  ", "  ", "  "],
        },
      },
      "3d": {
        height: 6,
        width: 8,
        chars: {
          A: ["   ___   ", "  / _ \\  ", " | |_| | ", " |  _  | ", " | | | | ", " |_| |_| "],
          " ": ["    ", "    ", "    ", "    ", "    ", "    "],
        },
      },
      bubble: {
        height: 6,
        width: 8,
        chars: {
          A: ["  oooo  ", " o    o ", "o      o", "oooooooo", "o      o", "        "],
          " ": ["    ", "    ", "    ", "    ", "    ", "    "],
        },
      },
      digital: {
        height: 7,
        width: 5,
        chars: {
          A: [" ▄▄▄ ", "▐   ▌", "▐▄▄▄▌", "▐   ▌", "▐   ▌", "     ", "     "],
          " ": ["   ", "   ", "   ", "   ", "   ", "   ", "   "],
        },
      },
      doom: {
        height: 8,
        width: 8,
        chars: {
          A: ["        ", "   ██   ", "  ████  ", " ██  ██ ", " ██████ ", " ██  ██ ", " ██  ██ ", "        "],
          " ": ["     ", "     ", "     ", "     ", "     ", "     ", "     ", "     "],
        },
      },
    }

    return patterns[font] || patterns["standard"]
  }
}
